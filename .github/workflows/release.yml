name: Tag released images

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

jobs:

  build-and-push-images:
    runs-on: ubuntu-latest

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in
    # this job.
    permissions:

      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      images: ${{ steps.image-list.outputs.IMAGE_LIST }}

    steps:

      - name: Debug Event Payload
        env:
          EVENT_PAYLOAD: ${{ toJson(github.event) }}
        run: echo "$EVENT_PAYLOAD"

      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: '3.12'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag main images with release tags
        id: push
        run: |
          python scripts/build.py --debug --no-build \
              --registry "$REGISTRY" --repository "${{ github.repository }}" \
              --tag "${{ github.event.release.target_commitish }}" \
              --release "${{ github.event.release.tag_name }}" \
              --ecr-endpoint ${{ secrets.ECR_ENDPOINT }} ${{ secrets.ECR_ENDPOINT_PROD }} \
              --trigger-ecr

      - name: print a list of all images
        id: image-list
        run: |
          images=$(python -c 'import os, json; os.chdir("scripts"); \
                  import builder; print(json.dumps(builder.IMAGE_ORDER[1:]))')
          #echo "IMAGE_LIST=${images}" >> $GITHUB_OUTPUT
          echo 'IMAGE_LIST=["fornax-main"]' >> $GITHUB_OUTPUT

  export-environment-locks:
    needs: build-and-push-images
    uses: ./.github/workflows/export-locks.yml
    secrets: inherit
    with:
      # pass the images that were built; do it this way so we can
      # use strategy.matrix in the export-locks workflow, so each image
      # lock files are exported in a separate job
      images: ${{ needs.build-and-push-images.outputs.images }}
      release: true