name: image-tests
on:
  # call from the image build pipeline
  workflow_call:
    inputs:
      images:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      uid: ${{ steps.get-user.outputs.uid }}
      gid: ${{ steps.get-user.outputs.gid }}
    steps:
      - id: get-user
        run: |
          echo "uid=$(id -u)" >> $GITHUB_OUTPUT
          echo "gid=$(id -g)" >> $GITHUB_OUTPUT
          echo "Images passed for testing: ${{ inputs.images }}"
  
  test-images:
    needs: configure
    runs-on: ubuntu-latest
    if: inputs.images != '[]'
    strategy:
      matrix:
        image: ${{ fromJson(inputs.images) }}
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: "Pull Image: ${{ matrix.image }}"
        run: |
          tag=${{ github.head_ref || github.ref_name }}
          image=${{ matrix.image }}
          docker pull ghcr.io/${{ github.repository }}/$image:$tag
          docker tag ghcr.io/${{ github.repository }}/$image:$tag $image

      - name: "Run tests inside the image: ${{ matrix.image }}"
        run: |
          image=${{ matrix.image }}
          docker run -i --rm -v .:/home/jovyan/ \
            -u root \
            -e "NB_UID=${{ needs.configure.outputs.uid }}" \
            -e "NB_GID=${{ needs.configure.outputs.gid }}" \
            -e "CHOWN_HOME=yes" \
            -e "CHOWN_HOME_OPTS=-R" \
            $image \
            bash -c "python tests/test_${image}.py"
    
      - name: "Run jupyter-lab: ${{ matrix.image }}"
        run: |
          image=${{ matrix.image }}
          cmd="docker run -i --rm $image"
          timeout 10 $cmd || [[ $? -eq 124 ]] && { echo "Timed out as expeced."; } || exit $?
